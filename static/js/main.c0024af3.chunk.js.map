{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","img/covid-19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0024af3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3o1NW\",\"card\":\"Cards_card__2D9gY\",\"infected\":\"Cards_infected__1ID-v\",\"recovered\":\"Cards_recovered__2S_lm\",\"deaths\":\"Cards_deaths__2l3d-\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\nconst Cards = ({data : { confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if(!confirmed){\r\n        return 'Loading... ';\r\n    }\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n    <Typography variant='h5'>\r\n        <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\r\n                    </CardContent> \r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'><CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" /></Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of recoveries from COVID-19</Typography>\r\n                    </CardContent> \r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'><CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" /></Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent> \r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n        \r\n    } catch(error) {\r\n        console.log(error());\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date : dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name);\r\n        \r\n    }catch(error){\r\n        console.log(error);\r\n    \r\n    }\r\n}","import React, { useState, useEffect }  from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n\r\n        }\r\n\r\n\r\n        fetchAPI();\r\n\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length?(\r\n            <Line data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets: [{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:'Infected',\r\n                    borderColor:'#3333ff', \r\n                    fill:true},{\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label:'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)', \r\n                    fill:true\r\n                    }],\r\n            }}\r\n            />\r\n        ) : null\r\n        \r\n    );\r\n\r\n    console.log(confirmed,recovered,deaths);\r\n\r\n    const barChart = (\r\n        confirmed? (\r\n            <Bar data={{\r\n                labels: ['Infected','Recovered','Deaths'],\r\n                datasets: [{\r\n                    label:'People',\r\n                    backgroundColor: ['rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)'\r\n                ],\r\n                data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: { display: false},\r\n                title: {display: true, text: `Current state in ${country}`}\r\n            }}/>\r\n        ): null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async() => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\"> Global </option>\r\n                {fetchedCountries.map((country, i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImage from './img/covid-19.png';\r\n\r\nclass App extends React.Component {\r\n    state={\r\n        data:{},\r\n        country:'',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country})\r\n    }\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport reactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nreactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__C0eaa\",\"image\":\"App_image__1Cwx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1j4tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3j3fw\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19.d7265326.png\";"],"sourceRoot":""}